{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "index.babel.js",
    "node_modules/grimoirejs-fundamental/ref/index.js",
    "node_modules/grimoirejs-math/ref/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "const {Vector3} = require('grimoirejs-math').default;\nconst {\n  Geometry,\n  GeometryFactory,\n} = require('grimoirejs-fundamental').default.Geometry;\n\nclass Torus {\n  constructor(row, column, irad, orad) {\n    this.row = row;\n    this.column = column;\n    this.irad = irad;\n    this.orad = orad;\n    this.offset = 0;\n    this.topology = 3;\n    this.positions = [];\n    this.indices = [];\n    this.normals = [];\n    this.texCoord = [];\n    this.count = 0;\n    this.debug = false;\n    this.layout = {\n      POSITION: {\n        size: 3,\n        stride: 32\n      },\n      NORMAL: {\n        size: 3,\n        stride: 32,\n        offset: 12\n      },\n      TEXCOORD: {\n        size: 2,\n        stride: 32,\n        offset: 24\n      },\n    };\n  }\n\n  debugInit() {\n  }\n\n  generate(debug) {\n    if (debug) {\n      this.debug = true;\n      this.debugInit();\n    }\n    this.geo();\n    this.vertices = this.interleave();\n    this.wireframeIndices = this.wireframe();\n    this.count = this.positions.length / this.topology;\n    if (this.debug) {\n      this.validate();\n    }\n  }\n\n  interleave() {\n    let vertices = [];\n    for (let i = 0; i <= this.positions.length / 3; i++) {\n      vertices.push(...this.positions.slice(i * 3, (i + 1) * 3).concat(this.normals.slice(i * 3, (i + 1) * 3)).concat(this.texCoord.slice(i * 2, (i + 1) * 2)));\n    }\n    return vertices;\n  }\n\n  wireframe() {\n    let indices = [];\n    const ic = new Array(3);\n    for (let i = 0; i <= this.indices.length - 1; i++) {\n      ic[i % 3] = this.indices[i];\n      if (i % 3 === 2) {\n        const a = ic[0], b = ic[1], c = ic[2];\n        indices.push(a, b, b, c, c, a);\n      }\n    }\n    return indices;\n  }\n\n  geo() {\n    for(let i = 0; i <= this.row; i++){\n      const r = Math.PI * 2 / this.row * i;\n      const rr = Math.cos(r);\n      const ry = Math.sin(r);\n      for(let ii = 0; ii <= this.column; ii++){\n        const tr = Math.PI * 2 / this.column * ii;\n        const tx = (rr * this.irad + this.orad) * Math.cos(tr);\n        const ty = ry * this.irad;\n        const tz = (rr * this.irad + this.orad) * Math.sin(tr);\n        const rx = rr * Math.cos(tr);\n        const rz = rr * Math.sin(tr);\n        this.positions.push(tx, ty, tz);\n        this.normals.push(rx, ry, rz);\n        this.texCoord.push(1, 1);\n      }\n    }\n    for(let i_ = 0; i_ < this.row; i_++){\n      for(let ii_ = 0; ii_ < this.column; ii_++){\n        const r = (this.column + 1) * i_ + ii_;\n        this.indices.push(r, r + this.column + 1, r + 1);\n        this.indices.push(r + this.column + 1, r + this.column + 2, r + 1);\n      }\n    }\n  }\n\n  coordToIndex(offset, x, y, up) {\n    return offset + x * (Math.abs(this.div.dotWith(up)) + 1) + y;\n  }\n\n  validate() {\n    if (this.positions.length % 3 !== 0) {\n      console.error(`position length(${this.positions.length}) is not a multiple of 3.`);\n    }\n    if (this.normals.length % 3 !== 0) {\n      console.error(`normal length(${this.normals.length}) is not a multiple of 3.`);\n    }\n    if (this.indices.length % this.topology !== 0) {\n      console.error(`index length(${this.indices.length}) is not a multiple of topology(${this.topology}).`);\n    }\n    if (this.texCoord.length % 2 !== 0) {\n      console.error(`texCoord length(${this.texCoord.length}) is not a multiple of 2.`);\n    }\n    if (this.positions.length !== this.normals.length) {\n      console.error(`normal length is not match to position length. normal: ${this.normals.length}, position: ${this.positions.length}`);\n    }\n    if (this.positions.length / 3 !== this.texCoord.length / 2) {\n      console.error(`texCoord pair length is not match to position pair length. texCoord: ${this.texCoord.length / 2}, position: ${this.positions.length / 3}`);\n    }\n    this.indices.forEach((v, idx) => {\n      if (isNaN(parseInt(v)) || parseInt(v) !== v) {\n        console.error(`index(${v}) is not a integer. in: index[${idx}] (${Math.ceil(idx / this.topology)})`);\n      }\n      if (v > this.positions.length / 3) {\n        console.error(`index(${v}) is out of range. in: index[${idx}] (${Math.ceil(idx / this.topology)})`);\n      }\n    });\n    this.positions.forEach((v, idx) => {\n      if (isNaN(parseFloat(v))) {\n        console.error(`position(${v}) is not a number. in: position[${idx}] (${Math.ceil(idx / 3)})`);\n      }\n      if (v > 1.0 || v < -1.0) {\n        console.warn(`position(${v}) is out of unit space(-1 < q < 1). in: position[${idx}] (${Math.ceil(idx / 3)})`);\n      }\n    });\n    Array.from({length: this.normals.length / 3}, (v, i) => {\n      return this.normals.slice(i * 3, i * 3 + 3);\n    }).forEach((v, idx) => {\n      const n = new Vector3(v);\n      if (Math.abs(n.magnitude - 1) > 0.001) {\n        console.warn(`normal(${v.toString()}) is not normalized(${n.magnitude}). in: normal[${idx * 3}..${idx * 3 + 3}] (${idx})`);\n      }\n    });\n    this.texCoord.forEach((v, idx) => {\n      if (isNaN(parseFloat(v))) {\n        console.error(`texCoord(${v}) is not a number. in: texCoord[${idx}] (${Math.ceil(idx / 2)})`);\n      }\n      if (v > 1.0 || v < 0) {\n        console.warn(`texCoord(${v}) is out of unit space(0 < q < 1). in: texCoord[${idx}] (${Math.ceil(idx / 2)})`);\n      }\n    });\n  }\n}\n\nGeometryFactory.addType('torus', {\n  row: {\n    converter: 'Number',\n    default: 32,\n  },\n  column: {\n    converter: 'Number',\n    default: 32,\n  },\n  irad: {\n    converter: 'Number',\n    default: 0.5,\n  },\n  orad: {\n    converter: 'Number',\n    default: 1.0,\n  },\n}, (gl, attrs) => {\n  const g = new Torus(attrs.row, attrs.column, attrs.irad, attrs.orad);\n  g.generate();\n  const geometry = new Geometry(gl);\n  geometry.addAttributes(g.interleave(), g.layout);\n  geometry.addIndex('default', g.index);\n  geometry.addIndex('wireframe', g.wireframe(), WebGLRenderingContext.LINES);\n  return geometry;\n});\n",
    "\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});exports.default=window.GrimoireJS.lib.fundamental;",
    "\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});exports.default=window.GrimoireJS.lib.math;"
  ]
}